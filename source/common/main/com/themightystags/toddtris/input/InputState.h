//    Copyright 2009 - 2012 Toddy
//
//    This file is part of Toddtris.
//
//    Toddtris is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Toddtris is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Toddtris.  If not, see <http://www.gnu.org/licenses/>.

// Class automatically generated by Dev-C++ New Class wizard

#ifndef INPUTSTATE_H
#define INPUTSTATE_H

namespace com {
	namespace themightystags {
		namespace toddtris {
			namespace input {
				struct InputState {
				public:
					const static int NUM_INPUTS = 2;
					bool leftPressed[NUM_INPUTS];
					bool leftHeld[NUM_INPUTS];
					bool leftReleased[NUM_INPUTS];

					bool rightPressed[NUM_INPUTS];
					bool rightHeld[NUM_INPUTS];
					bool rightReleased[NUM_INPUTS];

					bool downPressed[NUM_INPUTS];
					bool downHeld[NUM_INPUTS];
					bool downReleased[NUM_INPUTS];

					bool upPressed[NUM_INPUTS];
					bool upHeld[NUM_INPUTS];
					bool upReleased[NUM_INPUTS];

					bool rotatePressed[NUM_INPUTS];
					bool rotateHeld[NUM_INPUTS];

					bool antirotatePressed[NUM_INPUTS];
					bool antirotateHeld[NUM_INPUTS];

					bool pausePressed[NUM_INPUTS];
					bool pauseHeld[NUM_INPUTS];

					bool ghostPressed[NUM_INPUTS];
					bool ghostHeld[NUM_INPUTS];
					
					bool holdPressed[NUM_INPUTS];
					bool holdHeld[NUM_INPUTS];

					bool dropPressed[NUM_INPUTS];
					bool dropHeld[NUM_INPUTS];

					bool screenshotPressed[NUM_INPUTS];
					bool screenshotHeld[NUM_INPUTS];
				};
			}
		}
	}
}
#endif // INPUTSTATE_H
